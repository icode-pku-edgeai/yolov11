# Ultralytics YOLO 🚀, AGPL-3.0 license
# Default training settings and hyperparameters for medium-augmentation COCO training

task: detect # (str) YOLO task, i.e. detect, segment, classify, pose, obb/目标检测/分割/分类/姿态估计/旋转目标检测
mode: train # (str) YOLO mode, i.e. train, val, predict, export, track, benchmark/训练/验证/预测/导出/跟踪/标杆

# Train settings -------------------------------------------------------------------------------------------------------
model: # (str, optional) path to model file, i.e. yolov8n.pt, yolov8n.yaml/预训练模型pt或者yaml
data: # (str, optional) path to data file, i.e. coco8.yaml/数据集
epochs: 100 # (int) number of epochs to train for/训练代数
time: # (float, optional) number of hours to train for, overrides epochs if supplied/训练时间
patience: 100 # (int) epochs to wait for no observable improvement for early stopping of training/早停代数
batch: 16 # (int) number of images per batch (-1 for AutoBatch)/batchsize大小,-1自动batch
imgsz: 640 # (int | list) input images size as int for train and val modes, or list[h,w] for predict and export modes/输入图像尺寸,训练验证用正方形，预测导出可以用长方形
save: True # (bool) save train checkpoints and predict results/保存
save_period: -1 # (int) Save checkpoint every x epochs (disabled if < 1)/保存频率
cache: False # (bool) True/ram, disk or False. Use cache for data loading/
device: # (int | str | list, optional) device to run on, i.e. cuda device=0 or device=0,1,2,3 or device=cpu/指定gpu
workers: 8 # (int) number of worker threads for data loading (per RANK if DDP)/指定线程
project: # (str, optional) project name/项目名
name: # (str, optional) experiment name, results saved to 'project/name' directory/实验名
exist_ok: False # (bool) whether to overwrite existing experiment/覆盖已有内容
pretrained: True # (bool | str) whether to use a pretrained model (bool) or a model to load weights from (str)/是否使用预训练模型
optimizer: auto # (str) optimizer to use, choices=[SGD, Adam, Adamax, AdamW, NAdam, RAdam, RMSProp, auto]/优化器
verbose: True # (bool) whether to print verbose output/日志输出
seed: 0 # (int) random seed for reproducibility/随机数种子
deterministic: True # (bool) whether to enable deterministic mode/确定性模式，保证同输入同输出
single_cls: False # (bool) train multi-class data as single-class/多类化作一类训练
rect: False # (bool) rectangular training if mode='train' or rectangular validation if mode='val'/矩形训练，默认是正方形
cos_lr: False # (bool) use cosine learning rate scheduler/使用余弦学习率表
close_mosaic: 10 # (int) disable mosaic augmentation for final epochs (0 to disable)/最后关闭马赛克表
resume: False # (bool) resume training from last checkpoint/断点存续
amp: True # (bool) Automatic Mixed Precision (AMP) training, choices=[True, False], True runs AMP check/自动混合精度
fraction: 1.0 # (float) dataset fraction to train on (default is 1.0, all images in train set)/训练用数据比例
profile: False # (bool) profile ONNX and TensorRT speeds during training for loggers/训练时记录器剖析onnx和trt的速度
freeze: None # (int | list, optional) freeze first n layers, or freeze list of layer indices during training/冻结层
multi_scale: False # (bool) Whether to use multiscale during training/多尺度训练
nwdloss: False #是否使用nwd损失函数
iou_ratio: 0.5

# Segmentation
overlap_mask: True # (bool) masks should overlap during training (segment train only)/训练时使用重叠掩码
mask_ratio: 4 # (int) mask downsample ratio (segment train only)/掩膜下采样
# Classification
dropout: 0.0 # (float) use dropout regularization (classify train only)/分类时使用随机失活

# Val/Test settings ----------------------------------------------------------------------------------------------------
val: True # (bool) validate/test during training/训练时调用验证/测试
split: val # (str) dataset split to use for validation, i.e. 'val', 'test' or 'train'/数据集分割,默认用val数据集
save_json: False # (bool) save results to JSON file/结果保存为json
save_hybrid: False # (bool) save hybrid version of labels (labels + additional predictions)/原始标签结合预测
conf: # (float, optional) object confidence threshold for detection (default 0.25 predict, 0.001 val)/置信度阈值
iou: 0.7 # (float) intersection over union (IoU) threshold for NMS/iou阈值
max_det: 300 # (int) maximum number of detections per image/最大检测数
half: False # (bool) use half precision (FP16)/半精度
dnn: False # (bool) use OpenCV DNN for ONNX inference/opencv dnn用于onnx推理
plots: True # (bool) save plots and images during train/val 保存训练/验证的曲线和图片

# Predict settings -----------------------------------------------------------------------------------------------------
source: # (str, optional) source directory for images or videos/预测内容
vid_stride: 1 # (int) video frame-rate stride/视频采样频率
stream_buffer: False # (bool) buffer all streaming frames (True) or return the most recent frame (False)/缓存所有帧或最近帧
visualize: False # (bool) visualize model features/可视化模型特性
augment: False # (bool) apply image augmentation to prediction sources/数据增强
agnostic_nms: False # (bool) class-agnostic NMS/类无关nms
classes: # (int | list[int], optional) filter results by class, i.e. classes=0, or classes=[0,2,3]/类可选
retina_masks: False # (bool) use high-resolution segmentation masks/高质量分割掩膜
embed: # (list[int], optional) return feature vectors/embeddings from given layers/给定层返回特征向量

# Visualize settings ---------------------------------------------------------------------------------------------------
show: False # (bool) show predicted images and videos if environment allows/图像或视频显示
save_frames: False # (bool) save predicted individual video frames/保存视频帧
save_txt: False # (bool) save results as .txt file/保存txt
save_conf: False # (bool) save results with confidence scores/保存置信度
save_crop: False # (bool) save cropped images with results/保存裁切图像
show_labels: True # (bool) show prediction labels, i.e. 'person'/显示类别名称
show_conf: True # (bool) show prediction confidence, i.e. '0.99'/显示置信度
show_boxes: True # (bool) show prediction boxes/显示预测框
line_width: # (int, optional) line width of the bounding boxes. Scaled to image size if None./预测框线宽

# Export settings ------------------------------------------------------------------------------------------------------
format: torchscript # (str) format to export to, choices at https://docs.ultralytics.com/modes/export/#export-formats/输出格式
keras: False # (bool) use Kera=s  
optimize: False # (bool) TorchScript: optimize for mobile /TorchScript手机端优化
int8: False # (bool) CoreML/TF INT8 quantization /CoreML/TF的int8量化
dynamic: False # (bool) ONNX/TF/TensorRT: dynamic axes /ONNX/TF/TensorRT的动态输出
simplify: True # (bool) ONNX: simplify model using `onnxslim` /onnx simplify
opset: # (int, optional) ONNX: opset version /opset版本
workspace: 4 # (int) TensorRT: workspace size (GB) /trt工作空间
nms: False # (bool) CoreML: add NMS /CoreML带不带nms

# Hyperparameters ------------------------------------------------------------------------------------------------------
lr0: 0.01 # (float) initial learning rate (i.e. SGD=1E-2, Adam=1E-3)/初始学习率
lrf: 0.01 # (float) final learning rate (lr0 * lrf)/最终学习率
momentum: 0.937 # (float) SGD momentum/Adam beta1/动量参数
weight_decay: 0.0005 # (float) optimizer weight decay 5e-4/权值衰减率
warmup_epochs: 3.0 # (float) warmup epochs (fractions ok)/热身代数
warmup_momentum: 0.8 # (float) warmup initial momentum/热身初始动量
warmup_bias_lr: 0.1 # (float) warmup initial bias lr/热身初始偏置学习率
box: 7.5 # (float) box loss gain/box损失权重
cls: 0.5 # (float) cls loss gain (scale with pixels)/分类损失权重
dfl: 1.5 # (float) dfl loss gain/分布焦点损失权重
pose: 12.0 # (float) pose loss gain/姿态估计损失权重
kobj: 1.0 # (float) keypoint obj loss gain/关键点损失权重
label_smoothing: 0.0 # (float) label smoothing (fraction)/便签平滑
nbs: 64 # (int) nominal batch size/名义批量大小
hsv_h: 0.015 # (float) image HSV-Hue augmentation (fraction)/色相
hsv_s: 0.7 # (float) image HSV-Saturation augmentation (fraction)/饱和度
hsv_v: 0.4 # (float) image HSV-Value augmentation (fraction)/明度
degrees: 0.0 # (float) image rotation (+/- deg)/角度
translate: 0.1 # (float) image translation (+/- fraction)/平移
scale: 0.5 # (float) image scale (+/- gain)/缩放
shear: 0.0 # (float) image shear (+/- deg)/裁剪
perspective: 0.0 # (float) image perspective (+/- fraction), range 0-0.001/角度
flipud: 0.0 # (float) image flip up-down (probability)/上下翻转
fliplr: 0.5 # (float) image flip left-right (probability)/左右翻转
bgr: 0.0 # (float) image channel BGR (probability)/
mosaic: 1.0 # (float) image mosaic (probability)/马赛克
mixup: 0.0 # (float) image mixup (probability)/重叠混图
copy_paste: 0.0 # (float) segment copy-paste (probability)/拷贝叠加
copy_paste_mode: "flip" # (str) the method to do copy_paste augmentation (flip, mixup)/翻转或混合模式
auto_augment: randaugment # (str) auto augmentation policy for classification (randaugment, autoaugment, augmix)
erasing: 0.4 # (float) probability of random erasing during classification training (0-0.9), 0 means no erasing, must be less than 1.0./分类中的随机擦除
crop_fraction: 1.0 # (float) image crop fraction for classification (0.1-1), 1.0 means no crop, must be greater than 0./分类的图像裁切

# Custom config.yaml ---------------------------------------------------------------------------------------------------
cfg: # (str, optional) for overriding defaults.yaml

# Tracker settings ------------------------------------------------------------------------------------------------------
tracker: botsort.yaml # (str) tracker type, choices=[botsort.yaml, bytetrack.yaml]
